import React from 'react';
import List from './List';
import uuidv1 from 'uuid/v1';

const Wrapper = ({ children }) => (
  <ul>{children}</ul>
);

// @TODO yes, later, we should replace this "data" argument for a better name.
// right now it's just works and i'm tired
const RenderItem = ({ data, id }) => {

  // if( typeof(data) === 'string' ){
    return (
        <li key={id}>{data}</li>
    )
  // }

  // all other cases. we're assuming that we have an object with {key, value} structure
  // or it'll generate an issue
  // but we actually never covered it well at DefaultList, right now we're passing
  // custom generated id, but we can/should update it later
  // return (
  //   <li key={data.key}>{data.value}</li>
  // )
}

// @TODO right now our key is autogenerated.
// it's maybe not a good idea for a future.
// when we'll have a real id from database we should use them(twice)
const DefaultList = ({ items }) => (
  <Wrapper>
    <List items={items}>
      {(data) =>
        <RenderItem data={data} key={uuidv1()} id={uuidv1()} />
      }
      </List>
  </Wrapper>
);

export default DefaultList;
